{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Alert","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","constent","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","children","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6a56b383.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, product: action.payload, success: true }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, product: action.payload, success: true }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n      // Check if the product is already in the shopping cart\r\n      // If it is, replace it with the new entry/order\r\n      // Else, add it to the shopping cart\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(x =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={e => setKeyword(e.target.value)}\r\n        placeholder='Search products...'\r\n        className='mr-sm-2 ml-sm-5'></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Log Out\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Proshop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <br></br>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}>\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map(x => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }>\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import {\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (\r\n  keyword = '',\r\n  pageNumber = ''\r\n) => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = product => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector(state => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Alert variant='danger'>{error}</Alert>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map(product => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' constent={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome to ProShop',\r\n  keywords: 'electronics, buy electronics, cheap electronics',\r\n  description: 'We sell the best products for cheap',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row, Alert } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  // useDispatch hook allows us to dispatch actions\r\n  const dispatch = useDispatch()\r\n\r\n  // useSelector hook gets data from state\r\n  const productList = useSelector(state => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map(product => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n  Alert,\r\n} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n  const {\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted!')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid></Image>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}></Rating>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={e => setQty(e.target.value)}>\r\n                            {[...Array(product.countInStock).keys()].map(x => (\r\n                              <option key={x + 1} value={x + 1}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}>\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && (\r\n                <Alert variant='info'>No reviews</Alert>\r\n              )}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map(review => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Alert variant='danger'>{errorProductReview}</Alert>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={e => setRating(e.target.value)}>\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={e =>\r\n                            setComment(e.target.value)\r\n                          }></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Alert variant='info'>\r\n                      Please <Link to='/login'>sign in</Link> to write a review\r\n                    </Alert>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Alert,\r\n} from 'react-bootstrap'\r\n// import Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = id => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Alert variant='info'>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Alert>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map(item => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={e =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }>\r\n                      {[...Array(item.countInStock).keys()].map(x => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}>\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}>\r\n                Proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Alert variant='danger'>{error}</Alert>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector(state => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Alert variant='danger'>{message}</Alert>}\r\n      {error && <Alert variant='danger'>{error}</Alert>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={e => setConfirmPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Log\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button, Alert, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector(state => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Alert variant='danger'>{message}</Alert>}\r\n        {error && <Alert variant='danger'>{error}</Alert>}\r\n        {success && <Alert variant='success'>Profile Updated</Alert>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={e => setConfirmPassword(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Alert variant='danger'>{errorOrders}</Alert>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={e => setAddress(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={e => setCity(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={e => setPostalCode(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={e => setCountry(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={e => setPaymentMethod(e.target.value)}></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Alert,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector(state => state.cart)\r\n\r\n  // calculate prices\r\n  const addDecimals = num => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Alert>Your cart is empty</Alert>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}>\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Alert,\r\n  Button,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector(state => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector(state => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    // calculate prices\r\n    const addDecimals = num => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, order, orderId, successPay, successDeliver])\r\n\r\n  const successPaymentHandler = paymentResult => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Alert variant='danger'>{error}</Alert>\r\n  ) : (\r\n    <>\r\n      <h1>Order {orderId}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Alert variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Alert>\r\n              ) : (\r\n                <Alert variant='danger'>Not delivered</Alert>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Alert variant='success'>Paid on {order.paidAt}</Alert>\r\n              ) : (\r\n                <Alert variant='danger'>Not paid</Alert>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Alert>Order is empty</Alert>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}>\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector(state => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector(state => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}>\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector(state => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, history])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Alert variant='danger'>{errorUpdate}</Alert>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Alert variant='danger'></Alert>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={e => setIsAdmin(e.target.checked)}></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Alert, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ match, history }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector(state => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector(state => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector(state => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Alert variant='danger'>{errorDelete}</Alert>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Alert variant='danger'>{errorCreate}</Alert>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}>\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector(state => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, productId, product, history, successUpdate])\r\n\r\n  const uploadFileHandler = async e => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        brand,\r\n        image,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Alert variant='danger'>{errorUpdate}</Alert>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Alert variant='danger'></Alert>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={e => setPrice(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={e => setImage(e.target.value)}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={e => setBrand(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter count in stock'\r\n                value={countInStock}\r\n                onChange={e => setCountInStock(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={e => setCategory(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector(state => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, userInfo, history])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER NAME</th>\r\n              <th>CREATED AT</th>\r\n              <th>TOTAL PRICE</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>ORDER ITEMS</th>\r\n              <th>SHIPPING ADDRESS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.orderItems.map(item => (\r\n                    <p>\r\n                      {item.qty} x {item.name}\r\n                    </p>\r\n                  ))}\r\n                </td>\r\n                <td>\r\n                  {order.shippingAddress.address},{' '}\r\n                  {order.shippingAddress.postalCode}{' '}\r\n                  {order.shippingAddress.city}, {order.shippingAddress.country}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}